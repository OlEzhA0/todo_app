{"version":3,"sources":["components/Header/Header.js","components/AddForm/AddForm.js","components/ListTodos/ListTodos.js","components/Footer/Footer.js","App.js","index.js"],"names":["Header","className","AddForm","state","newTodoValue","errorAddNewTodo","writeNewTodo","e","letter","target","value","replace","setState","length","submitTodo","validateInput","props","preventDefault","this","todos","selectAllTodo","selectAll","onSubmit","type","onClick","placeholder","onChange","React","Component","ListTodos","editingId","newValue","inputError","editTodoValue","id","changeTodoValue","handleLostFocus","handleTodoInput","currentKey","key","list","changeStatusComplete","destroyTodo","console","log","map","todo","onDoubleClick","cn","editing","completed","checked","htmlFor","onKeyDown","onBlur","Footer","activeList","changePage","clearCompletedTodo","lengthItemsLeft","views","href","PureComponent","App","currentId","addTodo","newTodo","applyFilter","filter","todoId","filterTodos","listWithOutDestroyedTodo","localStorage","removeItem","clear","forEach","i","setItem","JSON","stringify","newCurrentId","changeTo","completedTodo","clearCompleted","valueOfLocalStorage","localTodos","localTodo","parse","getItem","push","currentTodos","nextId","startItem","visibleList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fa7c76ed.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => (\n  <header className=\"header\">\n    <h1>todos</h1>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\nimport PropTypes, { objectOf, shape } from 'prop-types';\n\nclass AddForm extends React.Component {\n  state = {\n    newTodoValue: '',\n    errorAddNewTodo: false,\n  }\n\n  writeNewTodo = (e) => {\n    const { errorAddNewTodo, newTodoValue } = this.state;\n    const letter = e.target.value.replace(/^\\s+/, '');\n\n    this.setState({ newTodoValue: letter });\n\n    if (newTodoValue.length >= 2 && errorAddNewTodo) {\n      this.setState({ errorAddNewTodo: false });\n    }\n  }\n\n  submitTodo = (e) => {\n    const { validateInput } = this.props;\n    const { newTodoValue } = this.state;\n\n    e.preventDefault();\n    validateInput(newTodoValue);\n\n    if (newTodoValue.length >= 3) {\n      this.setState(() => ({\n        newTodoValue: '',\n      }));\n    } else {\n      this.setState({ errorAddNewTodo: true });\n    }\n  }\n\n  render() {\n    const { newTodoValue, errorAddNewTodo } = this.state;\n    const { todos, selectAllTodo, selectAll } = this.props;\n\n    return (\n      <>\n        <form\n          onSubmit={this.submitTodo}\n          className=\"formAddTodo\"\n        >\n          {todos.length >= 1\n            && (\n              <button\n                type=\"button\"\n                className={selectAll\n                  ? 'buttonSelectAll act'\n                  : 'buttonSelectAll dis'}\n                onClick={() => selectAllTodo()}\n              >\n                ‚ùØ\n              </button>\n            )\n          }\n          <input\n            className={errorAddNewTodo\n              ? 'new-todo new-todo__error'\n              : 'new-todo'}\n            placeholder=\"What needs to be done?\"\n            value={newTodoValue}\n            onChange={this.writeNewTodo}\n          />\n        </form>\n      </>\n    );\n  }\n}\n\nAddForm.propTypes = {\n  validateInput: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(objectOf(shape({\n    value: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }))).isRequired,\n  selectAllTodo: PropTypes.func.isRequired,\n  selectAll: PropTypes.bool.isRequired,\n};\n\nexport default AddForm;\n","import React from 'react';\nimport PropTypes, { objectOf, shape } from 'prop-types';\nimport cn from 'classnames';\n\nclass ListTodos extends React.Component {\n  state = {\n    editingId: '',\n    newValue: '',\n    inputError: false,\n  }\n\n  editTodoValue = (id, value) => {\n    this.setState(() => ({\n      editingId: id,\n      newValue: value,\n      inputError: false,\n    }));\n  }\n\n  changeTodoValue = (e) => {\n    const letter = e.target.value.replace(/^ /, '');\n\n    this.setState({ newValue: letter });\n  }\n\n  handleLostFocus = () => {\n    const { changeTodoValue } = this.props;\n\n    this.setState((state) => {\n      const editingId = '';\n      const newValue = '';\n      let inputError = false;\n\n      if (state.newValue.length < 3) {\n        inputError = true;\n\n        return {\n          inputError,\n        };\n      }\n\n      changeTodoValue(state.editingId, state.newValue);\n\n      return {\n        inputError,\n        editingId,\n        newValue,\n      };\n    });\n  }\n\n  handleTodoInput = (e) => {\n    const { changeTodoValue } = this.props;\n    const currentKey = e.key;\n\n    this.setState((state) => {\n      const inputError = false;\n      const editingId = '';\n      const newValue = '';\n\n      if (currentKey === 'Enter' && state.newValue.length >= 3) {\n        changeTodoValue(state.editingId, state.newValue);\n\n        return {\n          editingId,\n          newValue,\n          inputError,\n        };\n      }\n\n      if (currentKey === 'Enter' && state.newValue.length < 3) {\n        return {\n          inputError: true,\n        };\n      }\n\n      if (currentKey === 'Escape') {\n        return {\n          editingId: '',\n          newValue: '',\n          inputError,\n        };\n      }\n\n      if (state.newValue.length >= 3) {\n        return {\n          inputError,\n        };\n      }\n    });\n  }\n\n  render() {\n    const { list, changeStatusComplete, destroyTodo } = this.props;\n    const { editingId, newValue, inputError } = this.state;\n\n    console.log(this.state.inputError);\n    return (\n      <ul className=\"todo-list\">\n        {list.map(todo => (\n          <li\n            key={todo.id}\n            onDoubleClick={() => this.editTodoValue(todo.id, todo.value)}\n            className={cn({\n              editing: editingId === todo.id,\n              completed: editingId !== todo.id && todo.completed,\n              '': editingId !== todo.id && !todo.completed,\n            })}\n          >\n            <div className=\"view\" >\n              <input\n                type=\"checkbox\"\n                className=\"toggle\"\n                id={`todo-${todo.id}`}\n                checked={todo.completed}\n                onChange={() => changeStatusComplete(todo.id)}\n              />\n              <label htmlFor={`todo-${todo.id}`}>{todo.value}</label>\n              <button\n                type=\"button\"\n                className=\"destroy\"\n                onClick={() => destroyTodo(todo.id)}\n              />\n            </div>\n            <input\n              type=\"text\"\n              className={inputError ? 'edit new-todo__error' : 'edit'}\n              value={newValue}\n              onChange={this.changeTodoValue}\n              onKeyDown={this.handleTodoInput}\n              onBlur={this.handleLostFocus}\n            />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nListTodos.propTypes = {\n  changeTodoValue: PropTypes.func.isRequired,\n  list: PropTypes.arrayOf(objectOf(shape({\n    value: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }))).isRequired,\n  changeStatusComplete: PropTypes.func.isRequired,\n  destroyTodo: PropTypes.func.isRequired,\n};\n\nexport default ListTodos;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Footer extends React.PureComponent {\n  render() {\n    const {\n      activeList, changePage, clearCompletedTodo, lengthItemsLeft,\n    } = this.props;\n    const pageViews = ['all', 'active', 'completed'];\n\n    return (\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          {lengthItemsLeft}\n          {' '}\n          items left\n        </span>\n\n        <ul className=\"filters\">\n          {pageViews.map(views => (\n            <li>\n              <a\n                href={`#/${views}`}\n                className={activeList === views ? 'selected' : ''}\n                onClick={() => changePage(views)}\n              >\n                {views}\n              </a>\n            </li>\n          ))}\n        </ul>\n\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={() => clearCompletedTodo()}\n        >\n          Clear completed\n        </button>\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  lengthItemsLeft: PropTypes.number.isRequired,\n  activeList: PropTypes.string.isRequired,\n  changePage: PropTypes.func.isRequired,\n  clearCompletedTodo: PropTypes.func.isRequired,\n};\n\nexport default Footer;\n","import React from 'react';\n\nimport Header from './components/Header/Header';\nimport AddForm from './components/AddForm/AddForm';\nimport ListTodos from './components/ListTodos/ListTodos';\nimport Footer from './components/Footer/Footer';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    activeList: 'all',\n    currentId: 1,\n    selectAll: false,\n  }\n\n  componentDidMount() {\n    localStorage.setItem(`${0}`, JSON.stringify({ startItem: 'startItem' }));\n    this.valueOfLocalStorage();\n    this.filterTodos();\n  }\n\n  componentDidUpdate() {\n    localStorage.clear();\n    this.state.todos.forEach((todo, i) => (\n      localStorage.setItem(`${i + 1}`, JSON.stringify({ ...todo }))\n    ));\n  }\n\n  validateInput = (newTodoValue) => {\n    if (newTodoValue.length >= 3) {\n      this.addTodo(newTodoValue);\n    }\n  }\n\n  addTodo = (newTodoValue) => {\n    const { currentId } = this.state;\n    const newTodo = {};\n\n    newTodo.value = newTodoValue;\n    newTodo.id = currentId;\n    newTodo.completed = false;\n    this.setState(state => ({\n      todos: [...state.todos, newTodo],\n      currentId: state.currentId + 1,\n      selectAll: false,\n    }));\n  }\n\n  applyFilter = (list) => {\n    const { todos } = this.state;\n\n    switch (list) {\n      case 'all':\n        return todos;\n\n      case 'active':\n        return todos.filter(todo => !todo.completed);\n\n      case 'completed':\n        return todos.filter(todo => todo.completed);\n\n      default:\n        return todos;\n    }\n  }\n\n  changeStatusComplete = (todoId) => {\n    this.setState(state => ({\n      todos: state.todos.map(todo => ({\n        ...todo,\n        completed: todo.id === todoId\n          ? !todo.completed\n          : todo.completed,\n      })),\n    }), () => this.filterTodos());\n  }\n\n  destroyTodo = (todoId) => {\n    const { todos } = this.state;\n    const listWithOutDestroyedTodo = todos.filter(todo => todo.id !== todoId);\n\n    localStorage.removeItem(`${todoId}`);\n\n    this.setState(() => ({ todos: listWithOutDestroyedTodo }),\n      () => {\n        const { todos } = this.state;\n        localStorage.clear();\n        todos.forEach((todo, i) => (\n          localStorage.setItem(`${i + 1}`, JSON.stringify({ ...todo }))\n        ));\n        if (!todos.length) {\n          this.setState({ currentId: 1 });\n        } else {\n          const lastItem = todos.length - 1;\n          const newCurrentId = todos[lastItem].id + 1;\n\n          this.setState(({ currentId: newCurrentId }));\n        }\n\n        this.filterTodos();\n      });\n  }\n\n  changePage = (changeTo) => {\n    this.setState(({ activeList: changeTo }));\n  }\n\n  filterTodos = () => {\n    const { todos } = this.state;\n    const completedTodo = todos.filter(todo => todo.completed);\n    todos.length === completedTodo.length\n      ? this.setState(() => ({ selectAll: true }))\n      : this.setState(() => ({ selectAll: false }));\n  }\n\n  clearCompletedTodo = () => {\n    const { todos } = this.state;\n    const clearCompleted = todos.filter(todo => !todo.completed);\n\n    this.setState(() => ({\n      todos: clearCompleted,\n    }));\n  }\n\n  selectAllTodo = () => {\n    const { selectAll } = this.state;\n\n    this.setState(state => ({\n      todos: [...state.todos.map(todo => ({\n        ...todo,\n        completed: !selectAll,\n      }))],\n      selectAll: !state.selectAll,\n    }), () => this.filterTodos());\n  }\n\n  changeTodoValue = (todoId, newValue) => {\n    const { todos } = this.state;\n\n    this.setState(() => ({\n      todos: todos.map(todo => ({\n        ...todo,\n        value: todo.id === todoId\n          ? newValue\n          : todo.value,\n      })),\n    }), () => {\n      localStorage.clear();\n      this.state.todos.forEach((todo, i) => (\n        localStorage.setItem(`${i + 1}`, JSON.stringify({ ...todo }))\n      ));\n    });\n  }\n\n  valueOfLocalStorage = () => {\n    const localTodos = [];\n\n    for (let i = 1; i < localStorage.length + 1; i += 1) {\n      const localTodo = JSON.parse(localStorage.getItem(`${i}`));\n\n      if (localTodo) {\n        localTodos.push(localTodo);\n      }\n    }\n\n    if (localTodos.length) {\n      const currentTodos = localTodos.map((todo, id) => ({\n        ...todo,\n        id: id + 1,\n      }));\n      const nextId = currentTodos[currentTodos.length - 1].id + 1;\n\n      this.setState(() => ({\n        todos: currentTodos, currentId: nextId,\n      }), () => this.filterTodos());\n    }\n  }\n\n  render() {\n    const {\n      activeList, todos, selectAll,\n    } = this.state;\n    const visibleList = this.applyFilter(activeList);\n\n    return (\n      <section className=\"todoapp\" >\n        <Header />\n        <AddForm\n          validateInput={this.validateInput}\n          todos={todos}\n          selectAllTodo={this.selectAllTodo}\n          selectAll={selectAll}\n        />\n        <ListTodos\n          list={visibleList}\n          changeStatusComplete={this.changeStatusComplete}\n          destroyTodo={this.destroyTodo}\n          changeTodoValue={this.changeTodoValue}\n        />\n        {this.state.todos.length >= 1\n          && (\n            <Footer\n              lengthItemsLeft={todos.filter(todo => !todo.completed).length}\n              changePage={this.changePage}\n              activeList={activeList}\n              clearCompletedTodo={this.clearCompletedTodo}\n            />\n          )\n\n        }\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}